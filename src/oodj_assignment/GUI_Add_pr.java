/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oodj_assignment;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class GUI_Add_pr extends javax.swing.JFrame {

    Admin admin;
    SalesManager sm;

    public GUI_Add_pr(Admin admin) {
        initComponents();
        this.admin = admin;
        try {
            showTable();
            txtPRID.setText(PurchaseRequisition.generateID());
            txtPRID.disable();
        } catch (IOException ex) {
            Logger.getLogger(GUI_Add_pr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public GUI_Add_pr(SalesManager sm) {
        initComponents();
        this.sm =sm;
        try {
            showTable();
            txtPRID.setText(PurchaseRequisition.generateID());
            txtPRID.disable();
        } catch (IOException ex) {
            Logger.getLogger(GUI_Add_pr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void showTable() throws IOException {
        DefaultTableModel model = (DefaultTableModel) ItemTable.getModel();
        model.setRowCount(0);
        
        String[] columnNames = {"Item ID","Item Name", "Category","Stock","Supplier ID","Supplier Name","Sell Price","Buy Price"}; 
        
        model.setColumnIdentifiers(columnNames);
        
        ArrayList<String[]> it = Item.view();
        for (String[] il: it) {
            model.addRow(il);
        }
    }
    /*public void selectTable()throws IOException{
        int[]selectedItem = ItemTable.getSelectedRows();
        if(selectedItem == null || selectedItem.length()<1){
            
        }
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Add_pr = new javax.swing.JLabel();
        System_name = new javax.swing.JLabel();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemTable = new javax.swing.JTable();
        txtPRID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Add_pr.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Add_pr.setText("Add Purchase Requisition ");

        System_name.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        System_name.setText("PURCHASE ORDER MANAGEMENT SYSTEM");

        buttonSave.setText("Save");
        buttonSave.setToolTipText("");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jLabel3.setText("Quantity");

        ItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ItemTable);

        jLabel1.setText("PR ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(Add_pr))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(System_name)))
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(buttonSave)
                        .addGap(55, 55, 55)
                        .addComponent(buttonCancel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtPRID, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(System_name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Add_pr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(txtPRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        
        String errorMessage = null;
        while(true){
            if(!(InputValidation.isValidQuantity(txtQuantity.getText()))){
                errorMessage = "Invalid quantity";
                break;
            } else{
                int itemRow = ItemTable.getSelectedRow();
                if (itemRow != -1){
                    String itemID = ItemTable.getModel().getValueAt(itemRow, 0).toString();
                    String itemName = ItemTable.getModel().getValueAt(itemRow, 1).toString();
                    String category = ItemTable.getModel().getValueAt(itemRow, 2).toString();
                    int stock = Integer.parseInt(ItemTable.getModel().getValueAt(itemRow, 3).toString());
                    String supplierID = ItemTable.getModel().getValueAt(itemRow, 4).toString();
                    String supplierName = ItemTable.getModel().getValueAt(itemRow, 5).toString();
                    double sellPrice = Double.parseDouble(ItemTable.getModel().getValueAt(itemRow, 6).toString());
                    double buyPrice = Double.parseDouble(ItemTable.getModel().getValueAt(itemRow, 7).toString());
                    Item item = new Item(itemID,itemName,category,stock,supplierID,supplierName,sellPrice,buyPrice);
                    PurchaseRequisition pr  = new PurchaseRequisition(txtPRID.getText(),item,Integer.parseInt(txtQuantity.getText()));
                    try {
                        if (pr.verifyUniqueness()){
                            if (admin != null){
                                admin.addPR(pr);
                                break;
                            } else if (sm != null){
                                sm.addPR(pr);
                                break;
                            } 
                        } else {
                            errorMessage = "Invalid Purchase Requisition";
                            break;
                        }
                    } catch (IOException ex) {
                        break;
                    }
                } else{
                    errorMessage = "No Item is Selected.";
                    break;
                }
            }
        }
        if (errorMessage != null){
            JOptionPane.showMessageDialog(null,errorMessage);
        }
        /*PurchaseRequisition pr = new PurchaseRequisition(txtQuantity.getText());
        try{
            if(admin!=null){
                admin.addPR(pr);
            }
            else if(sm!=null){
                sm.addPR(pr);
            }
        } catch (IOException ex) {
            Logger.getLogger(GUI_Add_item.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        if (admin != null){
            GUI_PRPO_Entry prpoEntry = new GUI_PRPO_Entry(admin);
            prpoEntry.show();
            this.dispose();
        } else if(sm != null){
            GUI_PRPO_Entry prpoEntry = new GUI_PRPO_Entry(sm);
            prpoEntry.show();
            this.dispose();
        }
    }//GEN-LAST:event_buttonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Add_pr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Add_pr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Add_pr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Add_pr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new GUI_Add_pr(new Admin()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Add_pr;
    private javax.swing.JTable ItemTable;
    private javax.swing.JLabel System_name;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtPRID;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
